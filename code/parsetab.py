
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'F5DB74754EF9988DF719A767CE43C530'
    
_lr_action_items = {'NOT':([17,20,22,29,35,41,66,68,74,96,105,108,],[29,29,29,29,29,29,29,29,29,29,29,29,]),'INT':([27,47,],[51,51,]),'BVAL':([17,20,22,29,35,37,41,56,57,58,59,60,61,62,63,64,66,68,71,72,73,74,96,105,108,],[31,31,31,31,31,31,31,31,31,-39,-45,-41,-37,-40,-44,-38,31,31,-49,31,-48,31,31,31,31,]),'COLON':([12,15,25,80,],[-16,27,47,-11,]),'SEMICOLON':([1,5,7,14,16,30,31,32,34,36,38,39,40,43,46,51,52,53,55,69,70,75,76,81,82,84,85,89,90,91,95,99,104,107,110,],[-5,11,-6,-7,28,-33,-53,-36,-47,-56,-43,-31,-52,-28,-26,-17,-18,-8,-34,-51,-54,-27,-29,-35,-42,-30,-50,-46,-32,-25,-55,-24,-9,109,111,]),'GT':([31,32,34,36,38,40,69,70,82,85,89,95,],[-53,58,-47,-56,-43,-52,-51,-54,-42,-50,-46,-55,]),'LT':([31,32,34,36,38,40,69,70,82,85,89,95,],[-53,64,-47,-56,-43,-52,-51,-54,-42,-50,-46,-55,]),'AND':([30,31,32,34,36,38,39,40,55,69,70,81,82,84,85,89,90,95,],[-33,-53,-36,-47,-56,-43,74,-52,-34,-51,-54,-35,-42,74,-50,-46,-32,-55,]),'LE':([31,32,34,36,38,40,69,70,82,85,89,95,],[-53,62,-47,-56,-43,-52,-51,-54,-42,-50,-46,-55,]),'CRPAR':([9,42,44,98,101,109,112,],[-2,76,-19,104,-10,-21,-20,]),'DIV':([31,34,36,38,40,69,70,82,85,89,95,],[-53,-47,-56,71,-52,-51,-54,71,-50,-46,-55,]),'$end':([3,4,9,44,],[-1,0,-2,-19,]),'VAR':([0,11,19,92,],[8,8,8,8,]),'PRINT':([10,11,24,28,65,77,92,94,97,103,],[20,-4,-3,20,20,20,-4,20,20,20,]),'ELSE':([30,31,32,34,36,38,39,40,43,46,55,69,70,75,76,81,82,83,84,85,89,90,91,95,99,],[-33,-53,-36,-47,-56,-43,-31,-52,-28,-26,-34,-51,-54,-27,-29,-35,-42,94,-30,-50,-46,-32,-25,-55,-24,]),'GE':([31,32,34,36,38,40,69,70,82,85,89,95,],[-53,60,-47,-56,-43,-52,-51,-54,-42,-50,-46,-55,]),'THEN':([30,31,32,33,34,36,38,39,40,55,69,70,81,82,84,85,89,90,95,],[-33,-53,-36,65,-47,-56,-43,-31,-52,-34,-51,-54,-35,-42,-30,-50,-46,-32,-55,]),'END':([10,21,28,54,111,],[-23,44,-23,-22,112,]),'LPAR':([12,13,17,20,22,29,35,36,37,41,56,57,58,59,60,61,62,63,64,66,68,71,72,73,74,96,105,108,],[-16,26,35,35,35,35,35,68,35,35,35,35,-39,-45,-41,-37,-40,-44,-38,35,35,-49,35,-48,35,35,35,35,]),'DO':([30,31,32,34,36,38,39,40,45,55,69,70,81,82,84,85,89,90,95,],[-33,-53,-36,-47,-56,-43,-31,-52,77,-34,-51,-54,-35,-42,-30,-50,-46,-32,-55,]),'BEGIN':([0,2,11,19,24,92,97,],[-4,10,-4,-4,-3,-4,103,]),'RETURN':([11,24,28,54,92,97,102,103,106,],[-4,-3,-23,-22,-4,-23,105,-23,108,]),'CLPAR':([10,11,24,28,51,52,65,77,78,92,94,97,103,],[19,-4,-3,19,-17,-18,19,19,92,-4,19,19,19,]),'BOOL':([27,47,],[52,52,]),'ID':([6,8,10,11,17,20,22,23,24,26,28,29,35,37,41,56,57,58,59,60,61,62,63,64,65,66,68,71,72,73,74,77,79,92,94,96,97,103,105,108,],[12,12,18,-4,36,36,36,46,-3,12,18,36,36,36,36,36,36,-39,-45,-41,-37,-40,-44,-38,18,36,36,-49,36,-48,36,18,12,-4,18,36,18,18,36,36,]),'OR':([30,31,32,33,34,36,38,39,40,43,45,55,67,69,70,75,81,82,84,85,87,89,90,95,100,107,110,],[-33,-53,-36,66,-47,-56,-43,-31,-52,66,66,-34,66,-51,-54,66,-35,-42,-30,-50,66,-46,-32,-55,66,66,66,]),'ASSIGN':([18,],[41,]),'FUN':([0,11,19,92,],[6,6,6,6,]),'COMMA':([30,31,32,34,36,38,39,40,48,50,51,52,53,55,69,70,81,82,84,85,87,88,89,90,93,95,100,],[-33,-53,-36,-47,-56,-43,-31,-52,79,-15,-17,-18,-8,-34,-51,-54,-35,-42,-30,-50,-60,96,-46,-32,-14,-55,-59,]),'IF':([10,11,24,28,65,77,92,94,97,103,],[17,-4,-3,17,17,17,-4,17,17,17,]),'SUB':([17,20,22,29,31,32,34,35,36,37,38,40,41,56,57,58,59,60,61,62,63,64,66,68,69,70,71,72,73,74,81,82,85,89,95,96,105,108,],[37,37,37,37,-53,59,-47,37,-56,37,-43,-52,37,37,37,-39,-45,-41,-37,-40,-44,-38,37,37,-51,-54,-49,37,-48,37,59,-42,-50,-46,-55,37,37,37,]),'WHILE':([10,11,24,28,65,77,92,94,97,103,],[22,-4,-3,22,22,22,-4,22,22,22,]),'ADD':([31,32,34,36,38,40,69,70,81,82,85,89,95,],[-53,63,-47,-56,-43,-52,-51,-54,63,-42,-50,-46,-55,]),'EQUAL':([31,32,34,36,38,40,69,70,82,85,89,95,],[-53,61,-47,-56,-43,-52,-51,-54,-42,-50,-46,-55,]),'RPAR':([26,30,31,32,34,36,38,39,40,48,49,50,51,52,53,55,67,68,69,70,81,82,84,85,86,87,88,89,90,93,95,100,],[-13,-33,-53,-36,-47,-56,-43,-31,-52,-12,80,-15,-17,-18,-8,-34,85,-58,-51,-54,-35,-42,-30,-50,95,-60,-57,-46,-32,-14,-55,-59,]),'MUL':([31,34,36,38,40,69,70,82,85,89,95,],[-53,-47,-56,73,-52,-51,-54,73,-50,-46,-55,]),'READ':([10,11,24,28,65,77,92,94,97,103,],[23,-4,-3,23,23,23,-4,23,23,23,]),'NUM':([17,20,22,29,35,37,41,56,57,58,59,60,61,62,63,64,66,68,71,72,73,74,96,105,108,],[40,40,40,40,40,40,40,40,40,-39,-45,-41,-37,-40,-44,-38,40,40,-49,40,-48,40,40,40,40,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'compare_op':([32,],[56,]),'declarations':([0,11,19,92,],[2,24,2,97,]),'program_body':([2,],[9,]),'prog':([0,],[4,]),'param_list':([13,],[25,]),'arguments':([68,],[86,]),'bint_factor':([17,20,22,29,35,41,66,68,74,96,105,108,],[30,30,30,55,30,30,30,30,90,30,30,30,]),'argument_list':([36,],[69,]),'fun_declaration':([0,11,19,92,],[7,7,7,7,]),'parameters':([26,],[49,]),'prog_stmts':([10,28,97,103,],[21,54,102,106,]),'type':([27,47,],[53,78,]),'fun_body':([97,],[101,]),'prog_stmt':([10,28,65,77,94,97,103,],[16,16,83,91,99,16,16,]),'arguments1':([68,],[88,]),'addop':([32,81,],[57,57,]),'var_declaration':([0,11,19,92,],[1,1,1,1,]),'basic_var_declaration':([8,26,79,],[14,50,93,]),'fun_block':([92,],[98,]),'block':([0,19,],[3,42,]),'declaration':([0,11,19,92,],[5,5,5,5,]),'int_expr':([17,20,22,29,35,41,56,66,68,74,96,105,108,],[32,32,32,32,32,32,81,32,32,32,32,32,32,]),'int_factor':([17,20,22,29,35,37,41,56,57,66,68,72,74,96,105,108,],[34,34,34,34,34,70,34,34,34,34,34,89,34,34,34,34,]),'parameters1':([26,],[48,]),'int_term':([17,20,22,29,35,41,56,57,66,68,74,96,105,108,],[38,38,38,38,38,38,38,82,38,38,38,38,38,38,]),'mulop':([38,82,],[72,72,]),'identifier':([6,8,26,79,],[13,15,15,15,]),'bint_term':([17,20,22,35,41,66,68,96,105,108,],[39,39,39,39,39,84,39,39,39,39,]),'expr':([17,20,22,35,41,68,96,105,108,],[33,43,45,67,75,87,100,107,110,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> prog","S'",1,None,None,None),
  ('prog -> block','prog',1,'p_prog','parseryacc.py',9),
  ('block -> declarations program_body','block',2,'p_block','parseryacc.py',14),
  ('declarations -> declaration SEMICOLON declarations','declarations',3,'p_declarations','parseryacc.py',19),
  ('declarations -> <empty>','declarations',0,'p_declarations','parseryacc.py',20),
  ('declaration -> var_declaration','declaration',1,'p_declaration','parseryacc.py',29),
  ('declaration -> fun_declaration','declaration',1,'p_declaration','parseryacc.py',30),
  ('var_declaration -> VAR basic_var_declaration','var_declaration',2,'p_var_declaration','parseryacc.py',34),
  ('basic_var_declaration -> identifier COLON type','basic_var_declaration',3,'p_basic_var_declaration','parseryacc.py',39),
  ('fun_declaration -> FUN identifier param_list COLON type CLPAR fun_block CRPAR','fun_declaration',8,'p_fun_declaration','parseryacc.py',44),
  ('fun_block -> declarations fun_body','fun_block',2,'p_fun_block','parseryacc.py',52),
  ('param_list -> LPAR parameters RPAR','param_list',3,'p_param_list','parseryacc.py',59),
  ('parameters -> parameters1','parameters',1,'p_parameters','parseryacc.py',63),
  ('parameters -> <empty>','parameters',0,'p_parameters','parseryacc.py',64),
  ('parameters1 -> parameters1 COMMA basic_var_declaration','parameters1',3,'p_parammeters1','parseryacc.py',69),
  ('parameters1 -> basic_var_declaration','parameters1',1,'p_parammeters1','parseryacc.py',70),
  ('identifier -> ID','identifier',1,'p_identifier','parseryacc.py',78),
  ('type -> INT','type',1,'p_type','parseryacc.py',82),
  ('type -> BOOL','type',1,'p_type','parseryacc.py',83),
  ('program_body -> BEGIN prog_stmts END','program_body',3,'p_program_body','parseryacc.py',93),
  ('fun_body -> BEGIN prog_stmts RETURN expr SEMICOLON END','fun_body',6,'p_fun_body','parseryacc.py',98),
  ('fun_body -> prog_stmts RETURN expr SEMICOLON','fun_body',4,'p_fun_body','parseryacc.py',99),
  ('prog_stmts -> prog_stmt SEMICOLON prog_stmts','prog_stmts',3,'p_prog_stmts','parseryacc.py',116),
  ('prog_stmts -> <empty>','prog_stmts',0,'p_prog_stmts','parseryacc.py',117),
  ('prog_stmt -> IF expr THEN prog_stmt ELSE prog_stmt','prog_stmt',6,'p_prog_stmt','parseryacc.py',125),
  ('prog_stmt -> WHILE expr DO prog_stmt','prog_stmt',4,'p_prog_stmt','parseryacc.py',126),
  ('prog_stmt -> READ ID','prog_stmt',2,'p_prog_stmt','parseryacc.py',127),
  ('prog_stmt -> ID ASSIGN expr','prog_stmt',3,'p_prog_stmt','parseryacc.py',128),
  ('prog_stmt -> PRINT expr','prog_stmt',2,'p_prog_stmt','parseryacc.py',129),
  ('prog_stmt -> CLPAR block CRPAR','prog_stmt',3,'p_prog_stmt','parseryacc.py',130),
  ('expr -> expr OR bint_term','expr',3,'p_expr','parseryacc.py',160),
  ('expr -> bint_term','expr',1,'p_expr','parseryacc.py',161),
  ('bint_term -> bint_term AND bint_factor','bint_term',3,'p_bint_term','parseryacc.py',171),
  ('bint_term -> bint_factor','bint_term',1,'p_bint_term','parseryacc.py',172),
  ('bint_factor -> NOT bint_factor','bint_factor',2,'p_bint_factor','parseryacc.py',180),
  ('bint_factor -> int_expr compare_op int_expr','bint_factor',3,'p_bint_factor','parseryacc.py',181),
  ('bint_factor -> int_expr','bint_factor',1,'p_bint_factor','parseryacc.py',182),
  ('compare_op -> EQUAL','compare_op',1,'p_compare_op','parseryacc.py',198),
  ('compare_op -> LT','compare_op',1,'p_compare_op','parseryacc.py',199),
  ('compare_op -> GT','compare_op',1,'p_compare_op','parseryacc.py',200),
  ('compare_op -> LE','compare_op',1,'p_compare_op','parseryacc.py',201),
  ('compare_op -> GE','compare_op',1,'p_compare_op','parseryacc.py',202),
  ('int_expr -> int_expr addop int_term','int_expr',3,'p_int_expr','parseryacc.py',218),
  ('int_expr -> int_term','int_expr',1,'p_int_expr','parseryacc.py',219),
  ('addop -> ADD','addop',1,'p_addop','parseryacc.py',228),
  ('addop -> SUB','addop',1,'p_addop','parseryacc.py',229),
  ('int_term -> int_term mulop int_factor','int_term',3,'p_int_term','parseryacc.py',236),
  ('int_term -> int_factor','int_term',1,'p_int_term','parseryacc.py',237),
  ('mulop -> MUL','mulop',1,'p_mulop','parseryacc.py',247),
  ('mulop -> DIV','mulop',1,'p_mulop','parseryacc.py',248),
  ('int_factor -> LPAR expr RPAR','int_factor',3,'p_int_factor','parseryacc.py',256),
  ('int_factor -> ID argument_list','int_factor',2,'p_int_factor','parseryacc.py',257),
  ('int_factor -> NUM','int_factor',1,'p_int_factor','parseryacc.py',258),
  ('int_factor -> BVAL','int_factor',1,'p_int_factor','parseryacc.py',259),
  ('int_factor -> SUB int_factor','int_factor',2,'p_int_factor','parseryacc.py',260),
  ('argument_list -> LPAR arguments RPAR','argument_list',3,'p_argument_list','parseryacc.py',285),
  ('argument_list -> <empty>','argument_list',0,'p_argument_list','parseryacc.py',286),
  ('arguments -> arguments1','arguments',1,'p_arguments','parseryacc.py',295),
  ('arguments -> <empty>','arguments',0,'p_arguments','parseryacc.py',296),
  ('arguments1 -> arguments1 COMMA expr','arguments1',3,'p_arguments1','parseryacc.py',301),
  ('arguments1 -> expr','arguments1',1,'p_arguments1','parseryacc.py',302),
]
