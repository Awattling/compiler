
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '6E0658D4B04D1C4FBB65368261F6856B'
    
_lr_action_items = {'BEGIN':([0,6,11,18,26,82,95,],[-4,12,-4,-3,-4,-4,100,]),'BOOL':([27,31,],[53,53,]),'ID':([2,8,11,12,16,18,21,22,23,25,32,38,42,44,48,55,58,59,60,61,62,63,64,65,66,67,68,69,70,72,76,77,79,82,95,97,98,100,106,107,],[9,9,-4,24,9,-3,41,41,47,41,24,41,41,41,41,9,41,-49,-48,41,-37,-40,-41,41,-44,-38,-45,-39,41,41,41,24,24,-4,24,41,24,24,41,41,]),'DO':([34,35,36,39,40,41,43,45,46,71,73,75,83,84,85,86,90,91,96,],[-43,-53,-36,-52,-47,-56,-33,-31,77,-34,-51,-54,-46,-42,-35,-30,-50,-32,-55,]),'SEMICOLON':([3,5,7,15,19,34,35,36,37,39,40,41,43,45,47,51,52,53,71,73,75,78,80,83,84,85,86,90,91,92,96,99,104,108,109,],[-6,11,-5,-7,32,-43,-53,-36,-28,-52,-47,-56,-33,-31,-26,-8,-17,-18,-34,-51,-54,-27,-29,-46,-42,-35,-30,-50,-32,-25,-55,-9,-24,110,111,]),'NOT':([21,22,25,38,42,48,70,72,76,97,106,107,],[38,38,38,38,38,38,38,38,38,38,38,38,]),'ASSIGN':([24,],[48,]),'COLON':([9,14,17,54,],[-16,27,31,-11,]),'LT':([34,35,36,39,40,41,73,75,83,84,90,96,],[-43,-53,67,-52,-47,-56,-51,-54,-46,-42,-50,-55,]),'PRINT':([11,12,18,32,77,79,82,95,98,100,],[-4,21,-3,21,21,21,-4,21,21,21,]),'END':([12,20,32,57,111,],[-23,33,-23,-22,112,]),'BVAL':([21,22,25,38,42,44,48,58,59,60,61,62,63,64,65,66,67,68,69,70,72,76,97,106,107,],[35,35,35,35,35,35,35,35,-49,-48,35,-37,-40,-41,35,-44,-38,-45,-39,35,35,35,35,35,35,]),'WHILE':([11,12,18,32,77,79,82,95,98,100,],[-4,22,-3,22,22,22,-4,22,22,22,]),'COMMA':([29,30,34,35,36,39,40,41,43,45,51,52,53,71,73,75,81,83,84,85,86,88,89,90,91,96,103,],[55,-15,-43,-53,-36,-52,-47,-56,-33,-31,-8,-17,-18,-34,-51,-54,-14,-46,-42,-35,-30,97,-60,-50,-32,-55,-59,]),'RETURN':([11,18,32,57,82,95,100,102,105,],[-4,-3,-23,-22,-4,-23,-23,106,107,]),'INT':([27,31,],[52,52,]),'EQUAL':([34,35,36,39,40,41,73,75,83,84,90,96,],[-43,-53,62,-52,-47,-56,-51,-54,-46,-42,-50,-55,]),'CRPAR':([13,33,50,94,101,110,112,],[-2,-19,80,99,-10,-21,-20,]),'ELSE':([34,35,36,37,39,40,41,43,45,47,71,73,75,78,80,83,84,85,86,90,91,92,93,96,104,],[-43,-53,-36,-28,-52,-47,-56,-33,-31,-26,-34,-51,-54,-27,-29,-46,-42,-35,-30,-50,-32,-25,98,-55,-24,]),'SUB':([21,22,25,34,35,36,38,39,40,41,42,44,48,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,75,76,83,84,85,90,96,97,106,107,],[44,44,44,-43,-53,68,44,-52,-47,-56,44,44,44,44,-49,-48,44,-37,-40,-41,44,-44,-38,-45,-39,44,44,-51,-54,44,-46,-42,68,-50,-55,44,44,44,]),'NUM':([21,22,25,38,42,44,48,58,59,60,61,62,63,64,65,66,67,68,69,70,72,76,97,106,107,],[39,39,39,39,39,39,39,39,-49,-48,39,-37,-40,-41,39,-44,-38,-45,-39,39,39,39,39,39,39,]),'OR':([34,35,36,37,39,40,41,43,45,46,49,71,73,74,75,78,83,84,85,86,89,90,91,96,103,108,109,],[-43,-53,-36,70,-52,-47,-56,-33,-31,70,70,-34,-51,70,-54,70,-46,-42,-35,-30,70,-50,-32,-55,70,70,70,]),'$end':([1,4,13,33,],[0,-1,-2,-19,]),'FUN':([0,11,26,82,],[2,2,2,2,]),'GE':([34,35,36,39,40,41,73,75,83,84,90,96,],[-43,-53,64,-52,-47,-56,-51,-54,-46,-42,-50,-55,]),'RPAR':([16,28,29,30,34,35,36,39,40,41,43,45,51,52,53,71,72,73,74,75,81,83,84,85,86,87,88,89,90,91,96,103,],[-13,54,-12,-15,-43,-53,-36,-52,-47,-56,-33,-31,-8,-17,-18,-34,-58,-51,90,-54,-14,-46,-42,-35,-30,96,-57,-60,-50,-32,-55,-59,]),'DIV':([34,35,39,40,41,73,75,83,84,90,96,],[59,-53,-52,-47,-56,-51,-54,-46,59,-50,-55,]),'GT':([34,35,36,39,40,41,73,75,83,84,90,96,],[-43,-53,69,-52,-47,-56,-51,-54,-46,-42,-50,-55,]),'MUL':([34,35,39,40,41,73,75,83,84,90,96,],[60,-53,-52,-47,-56,-51,-54,-46,60,-50,-55,]),'READ':([11,12,18,32,77,79,82,95,98,100,],[-4,23,-3,23,23,23,-4,23,23,23,]),'LPAR':([9,10,21,22,25,38,41,42,44,48,58,59,60,61,62,63,64,65,66,67,68,69,70,72,76,97,106,107,],[-16,16,42,42,42,42,72,42,42,42,42,-49,-48,42,-37,-40,-41,42,-44,-38,-45,-39,42,42,42,42,42,42,]),'AND':([34,35,36,39,40,41,43,45,71,73,75,83,84,85,86,90,91,96,],[-43,-53,-36,-52,-47,-56,-33,76,-34,-51,-54,-46,-42,-35,76,-50,-32,-55,]),'ADD':([34,35,36,39,40,41,73,75,83,84,85,90,96,],[-43,-53,66,-52,-47,-56,-51,-54,-46,-42,66,-50,-55,]),'LE':([34,35,36,39,40,41,73,75,83,84,90,96,],[-43,-53,63,-52,-47,-56,-51,-54,-46,-42,-50,-55,]),'IF':([11,12,18,32,77,79,82,95,98,100,],[-4,25,-3,25,25,25,-4,25,25,25,]),'CLPAR':([11,12,18,32,52,53,56,77,79,82,95,98,100,],[-4,26,-3,26,-17,-18,82,26,26,-4,26,26,26,]),'VAR':([0,11,26,82,],[8,8,8,8,]),'THEN':([34,35,36,39,40,41,43,45,49,71,73,75,83,84,85,86,90,91,96,],[-43,-53,-36,-52,-47,-56,-33,-31,79,-34,-51,-54,-46,-42,-35,-30,-50,-32,-55,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'int_term':([21,22,25,38,42,48,61,65,70,72,76,97,106,107,],[34,34,34,34,34,34,84,34,34,34,34,34,34,34,]),'prog_stmt':([12,32,77,79,95,98,100,],[19,19,92,93,19,104,19,]),'program_body':([6,],[13,]),'parameters':([16,],[28,]),'var_declaration':([0,11,26,82,],[7,7,7,7,]),'parameters1':([16,],[29,]),'int_expr':([21,22,25,38,42,48,65,70,72,76,97,106,107,],[36,36,36,36,36,36,85,36,36,36,36,36,36,]),'type':([27,31,],[51,56,]),'addop':([36,85,],[61,61,]),'int_factor':([21,22,25,38,42,44,48,58,61,65,70,72,76,97,106,107,],[40,40,40,40,40,75,40,83,40,40,40,40,40,40,40,40,]),'arguments1':([72,],[88,]),'bint_factor':([21,22,25,38,42,48,70,72,76,97,106,107,],[43,43,43,71,43,43,43,43,91,43,43,43,]),'declaration':([0,11,26,82,],[5,5,5,5,]),'prog':([0,],[1,]),'compare_op':([36,],[65,]),'expr':([21,22,25,42,48,72,97,106,107,],[37,46,49,74,78,89,103,108,109,]),'fun_body':([95,],[101,]),'param_list':([10,],[17,]),'identifier':([2,8,16,55,],[10,14,14,14,]),'fun_declaration':([0,11,26,82,],[3,3,3,3,]),'basic_var_declaration':([8,16,55,],[15,30,81,]),'prog_stmts':([12,32,95,100,],[20,57,102,105,]),'block':([0,26,],[4,50,]),'argument_list':([41,],[73,]),'declarations':([0,11,26,82,],[6,18,6,95,]),'mulop':([34,84,],[58,58,]),'fun_block':([82,],[94,]),'arguments':([72,],[87,]),'bint_term':([21,22,25,42,48,70,72,97,106,107,],[45,45,45,45,45,86,45,45,45,45,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> prog","S'",1,None,None,None),
  ('prog -> block','prog',1,'p_prog','parseryacc.py',9),
  ('block -> declarations program_body','block',2,'p_block','parseryacc.py',14),
  ('declarations -> declaration SEMICOLON declarations','declarations',3,'p_declarations','parseryacc.py',19),
  ('declarations -> <empty>','declarations',0,'p_declarations','parseryacc.py',20),
  ('declaration -> var_declaration','declaration',1,'p_declaration','parseryacc.py',29),
  ('declaration -> fun_declaration','declaration',1,'p_declaration','parseryacc.py',30),
  ('var_declaration -> VAR basic_var_declaration','var_declaration',2,'p_var_declaration','parseryacc.py',34),
  ('basic_var_declaration -> identifier COLON type','basic_var_declaration',3,'p_basic_var_declaration','parseryacc.py',39),
  ('fun_declaration -> FUN identifier param_list COLON type CLPAR fun_block CRPAR','fun_declaration',8,'p_fun_declaration','parseryacc.py',44),
  ('fun_block -> declarations fun_body','fun_block',2,'p_fun_block','parseryacc.py',52),
  ('param_list -> LPAR parameters RPAR','param_list',3,'p_param_list','parseryacc.py',59),
  ('parameters -> parameters1','parameters',1,'p_parameters','parseryacc.py',63),
  ('parameters -> <empty>','parameters',0,'p_parameters','parseryacc.py',64),
  ('parameters1 -> parameters1 COMMA basic_var_declaration','parameters1',3,'p_parammeters1','parseryacc.py',69),
  ('parameters1 -> basic_var_declaration','parameters1',1,'p_parammeters1','parseryacc.py',70),
  ('identifier -> ID','identifier',1,'p_identifier','parseryacc.py',78),
  ('type -> INT','type',1,'p_type','parseryacc.py',82),
  ('type -> BOOL','type',1,'p_type','parseryacc.py',83),
  ('program_body -> BEGIN prog_stmts END','program_body',3,'p_program_body','parseryacc.py',93),
  ('fun_body -> BEGIN prog_stmts RETURN expr SEMICOLON END','fun_body',6,'p_fun_body','parseryacc.py',98),
  ('fun_body -> prog_stmts RETURN expr SEMICOLON','fun_body',4,'p_fun_body','parseryacc.py',99),
  ('prog_stmts -> prog_stmt SEMICOLON prog_stmts','prog_stmts',3,'p_prog_stmts','parseryacc.py',116),
  ('prog_stmts -> <empty>','prog_stmts',0,'p_prog_stmts','parseryacc.py',117),
  ('prog_stmt -> IF expr THEN prog_stmt ELSE prog_stmt','prog_stmt',6,'p_prog_stmt','parseryacc.py',125),
  ('prog_stmt -> WHILE expr DO prog_stmt','prog_stmt',4,'p_prog_stmt','parseryacc.py',126),
  ('prog_stmt -> READ ID','prog_stmt',2,'p_prog_stmt','parseryacc.py',127),
  ('prog_stmt -> ID ASSIGN expr','prog_stmt',3,'p_prog_stmt','parseryacc.py',128),
  ('prog_stmt -> PRINT expr','prog_stmt',2,'p_prog_stmt','parseryacc.py',129),
  ('prog_stmt -> CLPAR block CRPAR','prog_stmt',3,'p_prog_stmt','parseryacc.py',130),
  ('expr -> expr OR bint_term','expr',3,'p_expr','parseryacc.py',160),
  ('expr -> bint_term','expr',1,'p_expr','parseryacc.py',161),
  ('bint_term -> bint_term AND bint_factor','bint_term',3,'p_bint_term','parseryacc.py',171),
  ('bint_term -> bint_factor','bint_term',1,'p_bint_term','parseryacc.py',172),
  ('bint_factor -> NOT bint_factor','bint_factor',2,'p_bint_factor','parseryacc.py',180),
  ('bint_factor -> int_expr compare_op int_expr','bint_factor',3,'p_bint_factor','parseryacc.py',181),
  ('bint_factor -> int_expr','bint_factor',1,'p_bint_factor','parseryacc.py',182),
  ('compare_op -> EQUAL','compare_op',1,'p_compare_op','parseryacc.py',198),
  ('compare_op -> LT','compare_op',1,'p_compare_op','parseryacc.py',199),
  ('compare_op -> GT','compare_op',1,'p_compare_op','parseryacc.py',200),
  ('compare_op -> LE','compare_op',1,'p_compare_op','parseryacc.py',201),
  ('compare_op -> GE','compare_op',1,'p_compare_op','parseryacc.py',202),
  ('int_expr -> int_expr addop int_term','int_expr',3,'p_int_expr','parseryacc.py',218),
  ('int_expr -> int_term','int_expr',1,'p_int_expr','parseryacc.py',219),
  ('addop -> ADD','addop',1,'p_addop','parseryacc.py',228),
  ('addop -> SUB','addop',1,'p_addop','parseryacc.py',229),
  ('int_term -> int_term mulop int_factor','int_term',3,'p_int_term','parseryacc.py',236),
  ('int_term -> int_factor','int_term',1,'p_int_term','parseryacc.py',237),
  ('mulop -> MUL','mulop',1,'p_mulop','parseryacc.py',247),
  ('mulop -> DIV','mulop',1,'p_mulop','parseryacc.py',248),
  ('int_factor -> LPAR expr RPAR','int_factor',3,'p_int_factor','parseryacc.py',256),
  ('int_factor -> ID argument_list','int_factor',2,'p_int_factor','parseryacc.py',257),
  ('int_factor -> NUM','int_factor',1,'p_int_factor','parseryacc.py',258),
  ('int_factor -> BVAL','int_factor',1,'p_int_factor','parseryacc.py',259),
  ('int_factor -> SUB int_factor','int_factor',2,'p_int_factor','parseryacc.py',260),
  ('argument_list -> LPAR arguments RPAR','argument_list',3,'p_argument_list','parseryacc.py',285),
  ('argument_list -> <empty>','argument_list',0,'p_argument_list','parseryacc.py',286),
  ('arguments -> arguments1','arguments',1,'p_arguments','parseryacc.py',295),
  ('arguments -> <empty>','arguments',0,'p_arguments','parseryacc.py',296),
  ('arguments1 -> arguments1 COMMA expr','arguments1',3,'p_arguments1','parseryacc.py',301),
  ('arguments1 -> expr','arguments1',1,'p_arguments1','parseryacc.py',302),
]
