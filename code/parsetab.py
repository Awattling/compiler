
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'E1E2609237AB4071257658E22B437B14'
    
_lr_action_items = {'EQUAL':([34,35,38,41,42,44,56,74,84,86,87,95,],[-53,-47,60,-52,-43,-56,-54,-51,-42,-50,-46,-55,]),'BEGIN':([0,7,9,16,18,93,97,],[-4,14,-4,-3,-4,-4,101,]),'DO':([33,34,35,37,38,40,41,42,44,56,72,74,81,83,84,85,86,87,95,],[-31,-53,-47,57,-36,-33,-52,-43,-56,-54,-34,-51,-32,-30,-42,-35,-50,-46,-55,]),'BVAL':([20,21,23,36,39,43,48,55,58,59,60,61,62,63,64,65,66,67,69,70,71,73,94,106,107,],[34,34,34,34,34,34,34,34,34,34,-37,-44,-39,-38,34,-40,-41,-45,-49,-48,34,34,34,34,34,]),'INT':([17,53,],[28,28,]),'CRPAR':([13,31,46,98,102,110,112,],[-2,54,-19,104,-10,-21,-20,]),'ASSIGN':([24,],[48,]),'MUL':([34,35,41,42,44,56,74,84,86,87,95,],[-53,-47,-52,70,-56,-54,-51,70,-50,-46,-55,]),'SUB':([20,21,23,34,35,36,38,39,41,42,43,44,48,55,56,58,59,60,61,62,63,64,65,66,67,69,70,71,73,74,84,85,86,87,94,95,106,107,],[36,36,36,-53,-47,36,67,36,-52,-43,36,-56,36,36,-54,36,36,-37,-44,-39,-38,36,-40,-41,-45,-49,-48,36,36,-51,-42,67,-50,-46,36,-55,36,36,]),'GT':([34,35,38,41,42,44,56,74,84,86,87,95,],[-53,-47,62,-52,-43,-56,-54,-51,-42,-50,-46,-55,]),'ELSE':([32,33,34,35,38,40,41,42,44,45,54,56,72,74,76,81,82,83,84,85,86,87,91,95,100,],[-26,-31,-53,-47,-36,-33,-52,-43,-56,-28,-29,-54,-34,-51,-27,-32,-25,-30,-42,-35,-50,-46,96,-55,-24,]),'PRINT':([9,14,16,49,57,75,93,96,97,101,],[-4,21,-3,21,21,21,-4,21,21,21,]),'BOOL':([17,53,],[30,30,]),'SEMICOLON':([1,2,3,10,25,28,29,30,32,33,34,35,38,40,41,42,44,45,54,56,72,74,76,81,82,83,84,85,86,87,95,100,104,108,109,],[9,-6,-5,-7,49,-17,-8,-18,-26,-31,-53,-47,-36,-33,-52,-43,-56,-28,-29,-54,-34,-51,-27,-32,-25,-30,-42,-35,-50,-46,-55,-24,-9,110,111,]),'ADD':([34,35,38,41,42,44,56,74,84,85,86,87,95,],[-53,-47,61,-52,-43,-56,-54,-51,-42,61,-50,-46,-55,]),'VAR':([0,9,18,93,],[6,6,6,6,]),'RETURN':([9,16,49,77,93,97,101,103,105,],[-4,-3,-23,-22,-4,-23,-23,106,107,]),'$end':([4,5,13,46,],[-1,0,-2,-19,]),'COMMA':([28,29,30,33,34,35,38,40,41,42,44,50,52,56,72,74,81,83,84,85,86,87,88,90,92,95,99,],[-17,-8,-18,-31,-53,-47,-36,-33,-52,-43,-56,-15,79,-54,-34,-51,-32,-30,-42,-35,-50,-46,94,-60,-14,-55,-59,]),'IF':([9,14,16,49,57,75,93,96,97,101,],[-4,23,-3,23,23,23,-4,23,23,23,]),'GE':([34,35,38,41,42,44,56,74,84,86,87,95,],[-53,-47,66,-52,-43,-56,-54,-51,-42,-50,-46,-55,]),'LPAR':([11,15,20,21,23,36,39,43,44,48,55,58,59,60,61,62,63,64,65,66,67,69,70,71,73,94,106,107,],[-16,26,39,39,39,39,39,39,73,39,39,39,39,-37,-44,-39,-38,39,-40,-41,-45,-49,-48,39,39,39,39,39,]),'RPAR':([26,28,29,30,33,34,35,38,40,41,42,44,50,51,52,56,68,72,73,74,81,83,84,85,86,87,88,89,90,92,95,99,],[-13,-17,-8,-18,-31,-53,-47,-36,-33,-52,-43,-56,-15,78,-12,-54,86,-34,-58,-51,-32,-30,-42,-35,-50,-46,-57,95,-60,-14,-55,-59,]),'CLPAR':([9,14,16,28,30,49,57,75,80,93,96,97,101,],[-4,18,-3,-17,-18,18,18,18,93,-4,18,18,18,]),'READ':([9,14,16,49,57,75,93,96,97,101,],[-4,19,-3,19,19,19,-4,19,19,19,]),'NUM':([20,21,23,36,39,43,48,55,58,59,60,61,62,63,64,65,66,67,69,70,71,73,94,106,107,],[41,41,41,41,41,41,41,41,41,41,-37,-44,-39,-38,41,-40,-41,-45,-49,-48,41,41,41,41,41,]),'WHILE':([9,14,16,49,57,75,93,96,97,101,],[-4,20,-3,20,20,20,-4,20,20,20,]),'THEN':([33,34,35,38,40,41,42,44,47,56,72,74,81,83,84,85,86,87,95,],[-31,-53,-47,-36,-33,-52,-43,-56,75,-54,-34,-51,-32,-30,-42,-35,-50,-46,-55,]),'OR':([33,34,35,37,38,40,41,42,44,45,47,56,68,72,74,76,81,83,84,85,86,87,90,95,99,108,109,],[-31,-53,-47,58,-36,-33,-52,-43,-56,58,58,-54,58,-34,-51,58,-32,-30,-42,-35,-50,-46,58,-55,58,58,58,]),'END':([14,22,49,77,111,],[-23,46,-23,-22,112,]),'LE':([34,35,38,41,42,44,56,74,84,86,87,95,],[-53,-47,65,-52,-43,-56,-54,-51,-42,-50,-46,-55,]),'AND':([33,34,35,38,40,41,42,44,56,72,74,81,83,84,85,86,87,95,],[55,-53,-47,-36,-33,-52,-43,-56,-54,-34,-51,-32,55,-42,-35,-50,-46,-55,]),'NOT':([20,21,23,39,43,48,55,58,73,94,106,107,],[43,43,43,43,43,43,43,43,43,43,43,43,]),'COLON':([11,12,27,78,],[-16,17,53,-11,]),'FUN':([0,9,18,93,],[8,8,8,8,]),'DIV':([34,35,41,42,44,56,74,84,86,87,95,],[-53,-47,-52,69,-56,-54,-51,69,-50,-46,-55,]),'ID':([6,8,9,14,16,19,20,21,23,26,36,39,43,48,49,55,57,58,59,60,61,62,63,64,65,66,67,69,70,71,73,75,79,93,94,96,97,101,106,107,],[11,11,-4,24,-3,32,44,44,44,11,44,44,44,44,24,44,24,44,44,-37,-44,-39,-38,44,-40,-41,-45,-49,-48,44,44,24,11,-4,44,24,24,24,44,44,]),'LT':([34,35,38,41,42,44,56,74,84,86,87,95,],[-53,-47,63,-52,-43,-56,-54,-51,-42,-50,-46,-55,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'bint_term':([20,21,23,39,48,58,73,94,106,107,],[33,33,33,33,33,83,33,33,33,33,]),'identifier':([6,8,26,79,],[12,15,12,12,]),'parameters':([26,],[51,]),'compare_op':([38,],[64,]),'program_body':([7,],[13,]),'arguments':([73,],[89,]),'addop':([38,85,],[59,59,]),'param_list':([15,],[27,]),'declarations':([0,9,18,93,],[7,16,7,97,]),'expr':([20,21,23,39,48,73,94,106,107,],[37,45,47,68,76,90,99,108,109,]),'fun_block':([93,],[98,]),'int_expr':([20,21,23,39,43,48,55,58,64,73,94,106,107,],[38,38,38,38,38,38,38,38,85,38,38,38,38,]),'arguments1':([73,],[88,]),'declaration':([0,9,18,93,],[1,1,1,1,]),'fun_declaration':([0,9,18,93,],[2,2,2,2,]),'argument_list':([44,],[74,]),'basic_var_declaration':([6,26,79,],[10,50,92,]),'bint_factor':([20,21,23,39,43,48,55,58,73,94,106,107,],[40,40,40,40,72,40,81,40,40,40,40,40,]),'parameters1':([26,],[52,]),'block':([0,18,],[4,31,]),'int_term':([20,21,23,39,43,48,55,58,59,64,73,94,106,107,],[42,42,42,42,42,42,42,42,84,42,42,42,42,42,]),'type':([17,53,],[29,80,]),'prog':([0,],[5,]),'var_declaration':([0,9,18,93,],[3,3,3,3,]),'int_factor':([20,21,23,36,39,43,48,55,58,59,64,71,73,94,106,107,],[35,35,35,56,35,35,35,35,35,35,35,87,35,35,35,35,]),'prog_stmts':([14,49,97,101,],[22,77,103,105,]),'fun_body':([97,],[102,]),'mulop':([42,84,],[71,71,]),'prog_stmt':([14,49,57,75,96,97,101,],[25,25,82,91,100,25,25,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> prog","S'",1,None,None,None),
  ('prog -> block','prog',1,'p_prog','parseryacc.py',9),
  ('block -> declarations program_body','block',2,'p_block','parseryacc.py',14),
  ('declarations -> declaration SEMICOLON declarations','declarations',3,'p_declarations','parseryacc.py',19),
  ('declarations -> <empty>','declarations',0,'p_declarations','parseryacc.py',20),
  ('declaration -> var_declaration','declaration',1,'p_declaration','parseryacc.py',29),
  ('declaration -> fun_declaration','declaration',1,'p_declaration','parseryacc.py',30),
  ('var_declaration -> VAR basic_var_declaration','var_declaration',2,'p_var_declaration','parseryacc.py',34),
  ('basic_var_declaration -> identifier COLON type','basic_var_declaration',3,'p_basic_var_declaration','parseryacc.py',39),
  ('fun_declaration -> FUN identifier param_list COLON type CLPAR fun_block CRPAR','fun_declaration',8,'p_fun_declaration','parseryacc.py',44),
  ('fun_block -> declarations fun_body','fun_block',2,'p_fun_block','parseryacc.py',52),
  ('param_list -> LPAR parameters RPAR','param_list',3,'p_param_list','parseryacc.py',59),
  ('parameters -> parameters1','parameters',1,'p_parameters','parseryacc.py',63),
  ('parameters -> <empty>','parameters',0,'p_parameters','parseryacc.py',64),
  ('parameters1 -> parameters1 COMMA basic_var_declaration','parameters1',3,'p_parammeters1','parseryacc.py',69),
  ('parameters1 -> basic_var_declaration','parameters1',1,'p_parammeters1','parseryacc.py',70),
  ('identifier -> ID','identifier',1,'p_identifier','parseryacc.py',78),
  ('type -> INT','type',1,'p_type','parseryacc.py',82),
  ('type -> BOOL','type',1,'p_type','parseryacc.py',83),
  ('program_body -> BEGIN prog_stmts END','program_body',3,'p_program_body','parseryacc.py',93),
  ('fun_body -> BEGIN prog_stmts RETURN expr SEMICOLON END','fun_body',6,'p_fun_body','parseryacc.py',98),
  ('fun_body -> prog_stmts RETURN expr SEMICOLON','fun_body',4,'p_fun_body','parseryacc.py',99),
  ('prog_stmts -> prog_stmt SEMICOLON prog_stmts','prog_stmts',3,'p_prog_stmts','parseryacc.py',116),
  ('prog_stmts -> <empty>','prog_stmts',0,'p_prog_stmts','parseryacc.py',117),
  ('prog_stmt -> IF expr THEN prog_stmt ELSE prog_stmt','prog_stmt',6,'p_prog_stmt','parseryacc.py',125),
  ('prog_stmt -> WHILE expr DO prog_stmt','prog_stmt',4,'p_prog_stmt','parseryacc.py',126),
  ('prog_stmt -> READ ID','prog_stmt',2,'p_prog_stmt','parseryacc.py',127),
  ('prog_stmt -> ID ASSIGN expr','prog_stmt',3,'p_prog_stmt','parseryacc.py',128),
  ('prog_stmt -> PRINT expr','prog_stmt',2,'p_prog_stmt','parseryacc.py',129),
  ('prog_stmt -> CLPAR block CRPAR','prog_stmt',3,'p_prog_stmt','parseryacc.py',130),
  ('expr -> expr OR bint_term','expr',3,'p_expr','parseryacc.py',160),
  ('expr -> bint_term','expr',1,'p_expr','parseryacc.py',161),
  ('bint_term -> bint_term AND bint_factor','bint_term',3,'p_bint_term','parseryacc.py',171),
  ('bint_term -> bint_factor','bint_term',1,'p_bint_term','parseryacc.py',172),
  ('bint_factor -> NOT bint_factor','bint_factor',2,'p_bint_factor','parseryacc.py',180),
  ('bint_factor -> int_expr compare_op int_expr','bint_factor',3,'p_bint_factor','parseryacc.py',181),
  ('bint_factor -> int_expr','bint_factor',1,'p_bint_factor','parseryacc.py',182),
  ('compare_op -> EQUAL','compare_op',1,'p_compare_op','parseryacc.py',198),
  ('compare_op -> LT','compare_op',1,'p_compare_op','parseryacc.py',199),
  ('compare_op -> GT','compare_op',1,'p_compare_op','parseryacc.py',200),
  ('compare_op -> LE','compare_op',1,'p_compare_op','parseryacc.py',201),
  ('compare_op -> GE','compare_op',1,'p_compare_op','parseryacc.py',202),
  ('int_expr -> int_expr addop int_term','int_expr',3,'p_int_expr','parseryacc.py',218),
  ('int_expr -> int_term','int_expr',1,'p_int_expr','parseryacc.py',219),
  ('addop -> ADD','addop',1,'p_addop','parseryacc.py',228),
  ('addop -> SUB','addop',1,'p_addop','parseryacc.py',229),
  ('int_term -> int_term mulop int_factor','int_term',3,'p_int_term','parseryacc.py',236),
  ('int_term -> int_factor','int_term',1,'p_int_term','parseryacc.py',237),
  ('mulop -> MUL','mulop',1,'p_mulop','parseryacc.py',247),
  ('mulop -> DIV','mulop',1,'p_mulop','parseryacc.py',248),
  ('int_factor -> LPAR expr RPAR','int_factor',3,'p_int_factor','parseryacc.py',256),
  ('int_factor -> ID argument_list','int_factor',2,'p_int_factor','parseryacc.py',257),
  ('int_factor -> NUM','int_factor',1,'p_int_factor','parseryacc.py',258),
  ('int_factor -> BVAL','int_factor',1,'p_int_factor','parseryacc.py',259),
  ('int_factor -> SUB int_factor','int_factor',2,'p_int_factor','parseryacc.py',260),
  ('argument_list -> LPAR arguments RPAR','argument_list',3,'p_argument_list','parseryacc.py',285),
  ('argument_list -> <empty>','argument_list',0,'p_argument_list','parseryacc.py',286),
  ('arguments -> arguments1','arguments',1,'p_arguments','parseryacc.py',295),
  ('arguments -> <empty>','arguments',0,'p_arguments','parseryacc.py',296),
  ('arguments1 -> arguments1 COMMA expr','arguments1',3,'p_arguments1','parseryacc.py',301),
  ('arguments1 -> expr','arguments1',1,'p_arguments1','parseryacc.py',302),
]
